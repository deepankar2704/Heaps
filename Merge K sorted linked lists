 class compare{
      public:
      bool operator()(Node*a,Node*b){
          return a->data>b->data;
      }
  };

class Solution{
  public:
  
    //Function to merge K sorted linked list.
    Node * mergeKLists(Node *arr[], int k)
    {
         priority_queue<Node*,vector<Node*>,compare>pq;
         
         if(k==0)
         return NULL;
         
         for(int i=0; i<k; i++)
         {
             if(arr[i]!=NULL)
             {
                 pq.push(arr[i]);
             }
         }
         
         Node*head=NULL;
         Node*tail=NULL;
         
         while(!pq.empty())
         {
             Node*temp=pq.top();
             pq.pop();
             
             if(head==NULL)
             {
                 head=temp;
                 tail=temp;
                 if(tail->next!=NULL)
                 pq.push(tail->next);
             }
             
             else{
                 tail->next=temp;
                 tail=temp;
                 if(tail->next!=NULL)
                 pq.push(tail->next);
             }
         }
         
         return head;
    }
};
