void heapify(vector<int>&arr,int n, int index)
{
	int leftIndex=2*index+1;
	int rightIndex=2*index+2;
	int largest=index;

	if(leftIndex<n && arr[leftIndex]>arr[largest])
	largest=leftIndex;

	if(rightIndex<n && arr[rightIndex]>arr[largest])
	largest=rightIndex;

	if(largest!=index)
	{
		swap(arr[largest],arr[index]);
		index=largest;
		heapify(arr, n, index);
	}
}



vector<int>MinToMaxHeap(int n, vector<int>&arr)
{
	for(int i=n/2-1; i>=0; i--) // no need to heapify leaf nodes
	{
		heapify(arr, n, i);
	}

	return arr;
}
